

@{
    ViewData["Title"] = "Dashboard | Phonebook Manager";
    //await Html.RenderPartialAsync("_ValidationScriptsPartial");


    List<Employee> Employees = new List<Employee> {
       new Employee { FullName = "Lenny Castravete", EmployeeID = "9000", Department = "7213", Email="castravete@mmrmakita.eu" } ,
       new Employee { FullName = "Nicolae Cusca", EmployeeID = "9100", Department = "7321", Email="cusca@mmrmakita.eu" },
       new Employee { FullName = "Ion Bidon", EmployeeID = "9200", Department = "7201", Email="bidon@mmrmakita.eu" }
    };


}




<div class="input-div">
    <input placeholder="All departments" style="width: 35%;" />
    <div style="position: relative; display: inline-block; width: 65%;">
        <i class="bi bi-search" id="searchButton" role="button" style="position: absolute;right: 10px; top: 50%;transform: translateY(-50%);"></i>
        <input type="text" id="searchInput" placeholder="Search by employee id, name or telephone number" />
        <input type="hidden" id="phoneLine" name="UserIdToAdd" />



    </div>
    <div class="dropdown">
        <button class="btn-dropdown dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
            Add new phone line
        </button>
        <ul class="dropdown-menu" style="z-index:9999;">
            <li><a class="dropdown-item" href="PhoneUser">Create and allocate</a></li>
            <li><a class="dropdown-item" href="#">Quick add</a></li>
            <li><a class="dropdown-item" id="" role="button" onclick="importFunction(this)">Import phone lines</a></li>
        </ul>
    </div>

</div>

<div class="list-container">

    <div>
        <table class="table">
            <thead class="sticky-top bg-white">
                <tr>
                    <th scope="col">Employee name</th>
                    <th scope="col">Employee ID</th>
                    <th scope="col">Phone Line</th>
                    <th scope="col">Department name</th>
                    <th scope="col">Department code</th>
                    <th scope="col">Line type</th>
                    <th scope="col">Actions</th>

                </tr>
            </thead>
            <tbody>
                @foreach (var emp in Employees)
                {
                    <tr class="border-0">
                        <td>@emp.FullName</td>
                        <td>@emp.EmployeeID</td>
                        <td>0721 234 567</td>
                        <td>Production Systems</td>
                        <td>@emp.Department</td>
                        <td>Multi use</td>
                        <td>
                            <span class="action-btn me-2" type="button">
                                <i class="bi bi-eye-fill" onclick="viewFunction(this)"
                                   emp-name="@emp.FullName" emp-id="@emp.EmployeeID" emp-department="@emp.Department"></i>
                            </span>
                            <span class="action-btn me-2" type="button">
                                <i class="bi bi-pencil-fill" onclick="editFunction(this)"
                                   emp-name="@emp.FullName" emp-id="@emp.EmployeeID" emp-department="@emp.Department"></i>
                            </span>

                            <span class="action-btn-danger me-2" type="button"> <i class="bi bi-trash-fill" onclick="deleteFunction(this)" emp-name="@emp.FullName" emp-id="@emp.EmployeeID"></i> </span>
                        </td>

                    </tr>

                }
            </tbody>
        </table>
    </div>

</div>


<!-- Modal View -->
<div class="modal fade" id="viewModal" tabindex="-1" aria-labelledby="viewModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="viewModalLabel">Details</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input id="mViewEmpName" class="mb-2" disabled />
                <input id="mViewEmpId" disabled />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                @*<button type="button" class="btn btn-danger" id="viewBtn">Not needed</button>*@
            </div>
        </div>
    </div>
</div>


<!-- Modal Edit -->
<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="editModalLabel">Edit confirmation</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input id="mEditEmpName" class="mb-2" />
                <input id="mEditEmpId" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-success" id="editBtn" onclick="closeEditModal()">Edit</button>
            </div>
        </div>
    </div>
</div>


<!-- Modal Delete -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="deleteModalLabel">Delete confirmation</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input id="mDelEmpName" class="mb-2" disabled />

                <input id="mDelEmpId" disabled />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-danger" id="deleteBtn">Delete</button>
            </div>
        </div>
    </div>
</div>



<!-- Modal Import data -->
<div class="modal fade" id="importModal" tabindex="-1" aria-labelledby="importModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" style="max-width: 60%;">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h2 class="" id="importModalLabel" style="color: #008A99; text-decoration: underline 2px; text-underline-offset: 0.5em; ">Import data</h2>
                @*<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>*@
            </div>
            <div class="modal-body">
                <div style="padding: 100px; display: flex; justify-content: center;">

                    <div style="display: flex; flex-direction: column; ">

                        <div class="d-flex gap-2 justify-content-end align-items-center mb-5">
                            <h5>Get our template</h5>
                            <button class="btn btn-success" style="width: 200px;" onclick="notImplemented()">Download template</button>
                        </div>
                        <div class="d-flex gap-2 justify-content-end align-items-center">
                            <h5>Import data</h5>
                            <button class="btn btn-secondary" style="width: 200px;" onclick="notImplemented()">Select file</button>
                        </div>
                    </div>

                </div>

            </div>
            <div class="modal-footer border-0 d-flex justify-content-center">
                <button type="button" class="btn btn-success" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<script>

    // SEARCH
    //$("#searchInput").focus(function () {
    //    if ($(this).val() === "Not found") { // clear the input field
    //        $(this).val("");
    //    }
    //});

    // On click and keydown
    $(document).ready(function () {

        $("#searchInput").on("keydown", function (event) {
            if (event.key === "Enter") {
                performSearch();
            }
        });
    });

    $(document).ready(function () {
        $("#searchButton").on("click", function () {
            performSearch();
        });
    });

    function performSearch() {

        var searchInputText = document.getElementById("searchInput");
        $.ajax({
            url: '/Dashboard/SearchPhoneLine/',
            data: { "searchText": searchInputText.value },
            type: "POST",
            success: function (data) {
                if (data === "Not found") {
                    //$("#searchInput").val("Not found"); // add a message in the input field
                    //$("#searchInput").blur(); // clear the focus
                    Toastify({
                        text: "Number does not exist",
                        duration: 10000,
                        newWindow: true,
                        close: true,
                        gravity: "bottom", // `top` or `bottom`
                        position: "left", // `left`, `center` or `right`
                        stopOnFocus: true, // Prevents dismissing of toast on hover
                        style: {
                            background: "linear-gradient(to right, #008A99, #55B1BB)",

                        },
                    }).showToast();
                }
                else {
                    response($.map(data, function (item) {
                        return item;
                    }));
                }
            },
            error: function (response) {
                $("#searchInput").val("Error: " + response);
            },
            failure: function (response) {
                $("#searchInput").val("Failure: " + response);
            }
        });
    }

    // Autocomplete
    $(function () {
        $("#searchInput").autocomplete({
            source: function (request, response) { // response is the server response, request is the search term
                $.ajax({
                    url: '/Dashboard/SearchPhoneLine/',
                    data: { "searchText": request.term },
                    type: "POST",
                    success: function (data) {
                        if (data === "Not found") {
                            //$("#searchInput").val("Not found"); // add a message in the input field
                            //$("#searchInput").blur(); // clear the focus
                            Toastify({
                                text: "Number does not exist",
                                duration: 10000,
                                newWindow: true,
                                close: true,
                                gravity: "bottom", // `top` or `bottom`
                                position: "left", // `left`, `center` or `right`
                                stopOnFocus: true, // Prevents dismissing of toast on hover
                                style: {
                                    background: "linear-gradient(to right, #008A99, #55B1BB)",

                                },
                            }).showToast();
                        }
                        else {
                            response($.map(data, function (item) {
                                return item;
                            }));
                        }
                    },
                    error: function (response) {
                        $("#searchInput").val("Error: " + response);
                    },
                    failure: function (response) {
                        $("#searchInput").val("Failure: " + response);
                    }
                });
            },
            select: function (e, i) {
                $("#phoneLine").val(i.item.val);
            },
            minLength: 1
        });
    });


    // VIEW
    function viewFunction(clicked_id) {
        const button = clicked_id;
        var empName = button.getAttribute("emp-name");
        var empId = button.getAttribute("emp-id");

        var modalEmpName = document.getElementById("mViewEmpName");
        modalEmpName.value = empName; // if it's an input use .value
        //modalEmpName.innerHTML = empName; // if it's a label use .innerHTML

        var modalEmpId = document.getElementById("mViewEmpId");
        modalEmpId.value = empId;
        //modalEmpId.innerHTML = empId;

        $('#viewModal').modal('show');
    }

    // EDIT
    function editFunction(clicked_id) {
        const button = clicked_id;
        var empName = button.getAttribute("emp-name");
        var empId = button.getAttribute("emp-id");

        var modalEmpName = document.getElementById("mEditEmpName");
        modalEmpName.value = empName; // if it's an input use .value
        //modalEmpName.innerHTML = empName; // if it's a label use .innerHTML

        var modalEmpId = document.getElementById("mEditEmpId");
        modalEmpId.value = empId;
        //modalEmpId.innerHTML = empId;

        $('#editModal').modal('show');
    }

    // Close the edit modal
    function closeEditModal() {
        Toastify({
            text: "Not implemented",
            duration: 3000,
            newWindow: true,
            close: true,
            gravity: "bottom", // `top` or `bottom`
            position: "left", // `left`, `center` or `right`
            stopOnFocus: true, // Prevents dismissing of toast on hover
            style: {
                background: "linear-gradient(to right, red, #55B1BB)",
            },
        }).showToast();

        $('#editModal').modal('hide');
    }


    // DELETE
    function deleteFunction(clicked_id) {
        const button = clicked_id;
        var empName = button.getAttribute("emp-name");
        var empId = button.getAttribute("emp-id");

        var modalEmpName = document.getElementById("mDelEmpName");
        modalEmpName.value = empName; // if it's an input use .value
        //modalEmpName.innerHTML = empName; // if it's a label use .innerHTML

        var modalEmpId = document.getElementById("mDelEmpId");
        modalEmpId.value = empId;
        //modalEmpId.innerHTML = empId;

        $('#deleteModal').modal('show');
    }
    // ajax for delete function
    $("body").on("click", "#deleteBtn", function () {
        var modalEmpId = $("#mDelEmpId");

        //var modalEmpName = $("#mEmpName");
        //alert(modalEmpId.val())
        //alert(modalEmpName.val())

        $.ajax({
            type: "POST",
            url: "/Dashboard/ModalDelete",
            data: { 'id': modalEmpId.val() }, // send only id /*, 'name': modalEmpName.val()*/
            dataType: 'json',
            success: function (result) {
                if (result == "invalidData") {

                    Toastify({
                        text: "Eroare",
                        duration: 3000,
                        newWindow: true,
                        close: true,
                        gravity: "bottom", // `top` or `bottom`
                        position: "left", // `left`, `center` or `right`
                        stopOnFocus: true, // Prevents dismissing of toast on hover
                        style: {
                            background: "linear-gradient(to right, red, #55B1BB)",
                        },
                    }).showToast();

                    $('#deleteModal').modal('hide');
                }
                else {
                    Toastify({
                        text: " " + modalEmpId.val() + " deleted? Nope.",
                        duration: 3000,
                        newWindow: true,
                        close: true,
                        gravity: "bottom", // `top` or `bottom`
                        position: "left", // `left`, `center` or `right`
                        stopOnFocus: true, // Prevents dismissing of toast on hover
                        style: {
                            background: "linear-gradient(to right, red, #55B1BB)",
                        },
                    }).showToast();

                    $('#deleteModal').modal('hide');
                    //document.location.href = "/" + result;

                }
            },
            error: function (status, error) {
                $("#deleteModal").html("Result: " + status + " " + error)
            }
        });
    });

    // IMPORT DATA
    function importFunction(clicked_id) {


        $('#importModal').modal('show');
    }
    // Close the import modal
    //function closeImportModal() {
    //    Toastify({
    //        text: "Not implemented",
    //        duration: 3000,
    //        newWindow: true,
    //        close: true,
    //        gravity: "bottom", // `top` or `bottom`
    //        position: "left", // `left`, `center` or `right`
    //        stopOnFocus: true, // Prevents dismissing of toast on hover
    //        style: {
    //            background: "linear-gradient(to right, red, #55B1BB)",
    //        },
    //    }).showToast();

    //    $('#importModal').modal('hide');
    //}



</script>




@*<script>
        document.getElementById("deleteIcon").addEventListener("click", function () {
            Toastify({
                text: "Are you sure?",
                duration: 3000,
                newWindow: true,
                close: true,
                gravity: "bottom", // `top` or `bottom`
                position: "left", // `left`, `center` or `right`
                stopOnFocus: true, // Prevents dismissing of toast on hover
                style: {
                    background: "linear-gradient(to right, #ff0000, #FDE063)",
                },
            }).showToast();
        });
    </script>*@